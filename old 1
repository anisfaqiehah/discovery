import { useEffect, useState } from "react";
import "./App.css";
import SpotifyWebApiJs from "spotify-web-api-js";
// import axios from "axios";

function App() {
  const CLIENT_ID = "0deed8d0d24748b4a5fa9d16ab5e5175";
  // const CLIENT_SECRET = "e19dbd696cca4cbfab50915a278ddc1b";
  const REDIRECT_URI = "http://localhost:3000";
  const AUTH_ENDPOINT = "https://accounts.spotify.com/authorize";
  const RESPONSE_TYPE = "token";

  const [token, setToken] = useState("");
  const [tracks, setTracks] = useState([]);
  const spotifyApi = new SpotifyWebApiJs();
  // const [artists, setArtists] = useState([]);
  // const [topTracks, setTopTracks] = useState([]);
  // const [recommendedTracks, setRecommendedTracks] = useState([]);


  useEffect(() => {
    const hash = window.location.hash;
    let token = window.localStorage.getItem("token");

    if (!token && hash) {
      token = hash
        .substring(1)
        .split("&")
        .find((elem) => elem.startsWith("access_token"))
        .split("=")[1];
      window.location.hash = "";
      window.localStorage.setItem("token", token);
    }

    setToken(token);
  }, []);

  const getTopTracks = () => {
    spotifyApi.getMyTopTracks({ limit: 10 }).then((data) => {
      setTracks(data.items);
    });
  };

  // useEffect(() => {
  //   const fetchTopArtists = async () => {
  //     try {
  //       const response = await axios.get(
  //         "https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=5",
  //         {
  //           headers: {
  //             Authorization: `Bearer ${token}`,
  //           },
  //         }
  //       );
  //       const data = response.data;
  //       setArtists(data.items);
  //     } catch (error) {
  //       console.error(error);
  //     }
  //   };

  //   if (token) {
  //     fetchTopArtists();
  //   }
  // }, [token]);

  const logout = () => {
    setToken("");
    window.localStorage.removeItem("token");
  };

  // const renderArtists = () => {
  //   return artists.map((artist) => (
  //     <div key={artist.id}>
  //       {artist.images.length ? (
  //         <img width={"100%"} src={artist.images[0].url} alt="" />
  //       ) : (
  //         <div>No Image</div>
  //       )}
  //       {artist.name}
  //     </div>
  //   ));
  // };

  // const handleGetTopTracks = async () => {
  //   const tracks = await getTopTracks();
  //   setTopTracks(tracks);
  // };

  // const handleGetRecommendations = async () => {
  //   const tracks = await getTopTracks();
  //   const recommendedTracks = await getRecommendations(tracks);
  //   setRecommendedTracks(recommendedTracks);
  // };

  // async function axiosWebApi(endpoint, method, body) {
  //   const { data } = await axios({
  //     url: `https://api.spotify.com${endpoint}`,
  //     method,
  //     data: JSON.stringify(body),
  //     headers: {
  //       Authorization: `Bearer ${token}`,
  //     },
  //   });
  //   return data;
  // }

//   async function getTopTracks() {
//     const data = await axiosWebApi(
//       "/v1/me/top/tracks?time_range=short_term&limit=5",
//       "GET"
//     );
//     return data.items;
//   }

//   async function getRecommendations(tracks) {
//     const trackIds = tracks.map((track) => track.id).join(",");
//     const data = await axiosWebApi(
//       `/v1/recommendations?seed_tracks=${trackIds}&limit=5`,
//       "GET"
//     );
//     return data.tracks;
//   }

//   const renderTopTracks = () => {
//     return topTracks.map((track) => (
//       <div key={track.id}>
//         <img width={"100%"} src={track.album.images[0].url} alt="" />
//         {track.name} - {track.artists.map((artist) => artist.name).join(", ")}
//       </div>
//     ));
//   };

// const renderRecommendedTracks = () => {
//   return recommendedTracks.map((track) => (
//     <div key={track.id}>
//       <img width={"100%"} src={track.album.images[0].url} alt="" />
//       {track.name} - {track.artists.map((artist) => artist.name).join(", ")}
//     </div>
//   ));
// };
   

//   return (
//     <div className="App">
//     <header className="App-header">
//     <h1>Spotify React</h1>
//     {!token ?
//       <a href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`}>Login to Spotify</a>
//       : <button onClick={logout}>Logout</button>
//     }
//     {{token ? (
//       <>
//         <button onClick={() => handleGetTopTracks()}>Get Top Tracks</button>
//         <button onClick={() => handleGetRecommendations()}>Get Recommended Tracks</button>
//       </>
//     ) : (
//       <h2>Please login</h2>
//     )}
//     {renderArtists()}
//     {renderTopTracks()}
//     {recommendedTracks.length > 0 && (
//       <>
//         <h2>Recommended Tracks:</h2>
//         {renderRecommendedTracks()}
//       </>
//     )} 
//   </header>
// </div>
//   );
  
// }

return (
  <div className="App">
    <header className="App-header">
      <h1>Spotify React</h1>
      {!token ? (
        <a
          href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`}
        >
          Login to Spotify
        </a>
      ) : (
        <>
          <button onClick={getTopTracks}>Get Top Tracks</button>
          <button onClick={logout}>Logout</button>
          <ul>
            {tracks.map((track) => (
              <li key={track.id}>{track.name}</li>
            ))}
          </ul>
        </>
      )}
    </header>
  </div>
);
}

export default App;
